{"version":3,"sources":["topicsPage/TopicList.jsx","topicsPage/TopicsPage.jsx","ErrorReporter.jsx","login.jsx","Greeting.jsx","logout.jsx","NavigationBar.jsx","Logo.jsx","topicsDiscussionPage/MessageInput.jsx","topicsDiscussionPage/splitLines.js","topicsDiscussionPage/DiscussionList.jsx","topicsDiscussionPage/TopicDetails.jsx","topicsDiscussionPage/TopicDiscussionPage.jsx","topicsPage/NewTopic.jsx","ProcessSpinner.jsx","App.jsx","services.js","serviceWorker.js","index.js","image/logo.jpg"],"names":["TopicList","_ref","topics","joinNewTopicDiscussion","messageLine","Object","values","map","topic","react_default","a","createElement","key","onClick","className","title","sender","Date","timestamp","toDateString","topicChat","messages","length","TopicsPage","allUsers","allTopics","topicChatInfo","handleTopicChatSubmit","handleTopicChatChange","topicChatdisabled","topicsPage_TopicList","handleSubmit","handleChange","disabled","ErrorReporter","errorMessage","keyId","errorMessageLine","errorinfo","toString","LoginPage","updateSender","value","name","placeholder","onChange","e","target","Greeting","username","Logout","logout","NavigationBar","isLogged","backToMainPage","gotoNewTopicPage","src_Greeting","src_logout","login","Logo","src","logoImage","alt","MessageInput","keyPress","topicId","splitLines","text","__html","replace","DiscussionList","message","dangerouslySetInnerHTML","TopicDetails","topicText","TopicDiscussionPage","topicsDiscussionPage_TopicDetails","topicsDiscussionPage_DiscussionList","topicsDiscussionPage_MessageInput","Outgoing","handleTitleChange","topicInfo","ProcessSpinner","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tempsender","currentPage","bind","assertThisInitialized","handleLoginSubmit","backToTopicsPage","_this2","showloading","setTimeout","setState","senderName","error","err","errorType","prevState","objectSpread","defineProperty","_this3","preventDefault","_ref4","callback","fetch","concat","method","headers","Headers","content-type","catch","Promise","reject","then","response","ok","json","Error","sendUsernameToLogin","_ref2","setStateError","_this4","_ref3","body","JSON","stringify","responseMessage","sendMessage","_this5","getUsers","users","_this6","getMessages","_ref5","allMessages","updateUsersState","updateMessagesState","_this7","sendUsernameToLogout","_ref6","_this8","getAllUsersAndMessages","setInterval","updateTopicDiscussion","_this9","_ref7","sendTopicChatInfo","_ref8","_this10","_ref9","_this11","_ref10","getTopicChatInfoByTopicId","_ref11","topicsDiscussionPage_TopicDiscussionPage","NewTopic","topicsPage_TopicsPage","src_ProcessSpinner","id","src_Logo","src_NavigationBar","src_ErrorReporter","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4de26d62.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TopicList=({topics,joinNewTopicDiscussion}) =>{\r\n    if(!topics) return \"\";\r\n    const messageLine = Object.values(topics).map((topic)=>\r\n        <li key={topic.key} onClick={()=>joinNewTopicDiscussion({key:topic.key})}>\r\n          <div className=\"topics\">\r\n            <div className=\"topics-title\">\r\n                <p>Title: {topic.title}</p>  \r\n            </div>\r\n            <div className=\"meta-info\">\r\n              <div className=\"sender-info\">\r\n                <span className=\"username\">by {topic.sender}</span>\r\n              </div>\r\n              <div className=\"message-info\">\r\n                <span className=\"timestamp\">{new Date(topic.timestamp).toDateString()}</span>\r\n              </div>\r\n              <div className=\"replies-info\">\r\n                <span className=\"replies-nums\">Replies: {topic.topicChat.messages.length}</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </li>\r\n    );\r\n    return(\r\n        <ul className=\"topics-list\"> \r\n            {messageLine}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TopicList;","import React from 'react';\r\nimport TopicList from './TopicList';\r\n\r\nconst TopicsPage =({allUsers,allTopics,topicChatInfo,handleTopicChatSubmit, handleTopicChatChange,topicChatdisabled,joinNewTopicDiscussion})=>{\r\n    return (\r\n        <div className=\"chat-app\">\r\n            <div className=\"display-panel\">\r\n                <TopicList topics={allTopics} topicChatInfo={topicChatInfo} handleSubmit={handleTopicChatSubmit} handleChange={ handleTopicChatChange}  disabled={topicChatdisabled} joinNewTopicDiscussion={joinNewTopicDiscussion}/>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopicsPage;","import React from 'react';\r\n\r\nconst ErrorReporter = ({errorMessage}) =>{\r\n    if(!errorMessage){\r\n        return (<div className=\"show-errors\"></div>);\r\n    }\r\n    let keyId=0;//avoiding warnings\r\n    const errorMessageLine = Object.values(errorMessage).map((errorinfo)=>\r\n      <li key={keyId++}>\r\n        <div className=\"error-message\">\r\n          <span className=\"error\">{errorinfo.toString()}</span>\r\n        </div>\r\n      </li>\r\n    );\r\n    return (\r\n      <div className=\"show-errors\">\r\n        <ul className=\"show-errors-list\">{errorMessageLine}</ul>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ErrorReporter;","import React from 'react';\r\n\r\nconst LoginPage = ({updateSender, value, disabled,handleSubmit}) =>{\r\n    \r\n    return(\r\n    <div className=\"login\">\r\n        <form>\r\n          <input name=\"username\" placeholder=\"Enter Username\" value={value} onChange={(e)=>updateSender(e.target.value)}/>\r\n          <button onClick={(e)=>handleSubmit(e)} disabled={disabled}>Login</button>\r\n        </form>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nconst Greeting = ({username}) =>{\r\n    return(\r\n        <div className=\"greeting\">\r\n            <p className=\"greeting\">Hi, {username}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Greeting;","import React from 'react';\r\n\r\nconst Logout =({logout})=>{\r\n    return (\r\n      <div className=\"logout\">\r\n          <button onClick={logout}>Logout</button>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Logout;","import React from 'react';\r\nimport LoginPage from './login';\r\nimport Greeting from './Greeting';\r\nimport Logout from './logout';\r\n\r\nconst NavigationBar = ({updateSender, value, handleSubmit, disabled, isLogged, logout, backToMainPage,gotoNewTopicPage})=>{\r\n    const showLog=()=>{\r\n        if(!isLogged){\r\n            return (\r\n                <div className='login-status-div'>\r\n                    <LoginPage updateSender={updateSender} value={value} handleSubmit={handleSubmit} disabled={disabled}/>\r\n                </div>\r\n            );\r\n        }else{\r\n            return (\r\n                <div className='login-status-div'>\r\n                    <Greeting username={isLogged}/>\r\n                    <Logout logout={logout}/>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n                    \r\n    // todo: add onclick for main page and new topic\r\n    return(\r\n        <div className=\"navigation-bar\">\r\n          <div className=\"all-links\">\r\n\t\t\t<ul>\r\n              <li>\r\n                  <p className=\"back-to-mainpage\" onClick={()=>backToMainPage()}>Main Page</p>\r\n              </li>\r\n              <li>\r\n                  <p className=\"new-topic\" onClick={()=>gotoNewTopicPage()}>New topic</p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n            {showLog()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavigationBar;","import React from 'react';\r\nimport logoImage from './image/logo.jpg';\r\nconst Logo = ()=>{\r\n  return(\r\n    <div className=\"logo\">\r\n          <img src={logoImage} alt=\"Logo\"/>\r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst MessageInput = ({topicChatInfo,handleSubmit,handleChange,keyPress,disabled,topicId})=>{\r\n    return(\r\n      <div className=\"reply-outgoing\">\r\n        <label>Reply to this Topic:</label>\r\n        <textarea className=\"to-send-message\" value={topicChatInfo} placeholder=\"Enter message to send\" onChange={(e)=>handleChange(e)} />  \r\n        <button disabled={disabled} onClick={(e)=>handleSubmit({e,topicId})}>Send</button>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default MessageInput;","const splitLines = (text)=>{\r\n    if(!text) return;\r\n    const str = text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\r\n    return { __html:str};\r\n};\r\n\r\nexport default splitLines;","import React from 'react';\r\nimport splitLines from './splitLines';\r\n\r\nconst DiscussionList = ({messages}) =>{\r\n    let keyId=0;\r\n    const messageLine = messages.map((message)=>\r\n        <li key={keyId++}>\r\n          <div className=\"message\">\r\n            <div className=\"meta-info\">\r\n              <div className=\"sender-info\">\r\n                <span className=\"username\">{message.sender}</span>\r\n              </div>\r\n              <div className=\"message-info\">\r\n                <span className=\"timestamp\">{new Date(message.timestamp).toDateString()}</span>\r\n              </div>\r\n              </div>\r\n            <p className=\"message-text\" dangerouslySetInnerHTML={splitLines(message.text)}></p>\r\n              \r\n          </div>\r\n        </li>\r\n    );\r\n    \r\n    return(\r\n        <div className=\"disscussions\">\r\n            <ul className=\"disscussions-list\"> \r\n                {messageLine}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiscussionList;","import React from 'react';\r\nimport splitLines from './splitLines';\r\n\r\nconst TopicDetails=({title, sender, timestamp, topicText})=>{\r\n    return (\r\n        <div className=\"topic-details\">\r\n            <div className=\"topic-title\">\r\n                <h1>{title}</h1>\r\n            </div>\r\n            <div className=\"topic-Info\">\r\n                <div className=\"topic-meta-info\">\r\n                    <div className=\"sender-info\">\r\n                        <span className=\"username\">{sender}</span>\r\n                    </div>\r\n                    <div className=\"message-info\">\r\n                        <span className=\"timestamp\">{new Date(timestamp).toDateString()}</span>\r\n                    </div>\r\n                </div>\r\n                <p className=\"message-text\" dangerouslySetInnerHTML={splitLines(topicText)}></p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopicDetails;","import React from 'react';\r\n\r\nimport MessageInput from './MessageInput';\r\nimport DiscussionList from './DiscussionList';\r\nimport TopicDetails from './TopicDetails';\r\n\r\nconst TopicDiscussionPage=({topic,topicChatInfo, handleTopicChatSubmit,  handleTopicChatChange, topicChatdisabled}) =>{\r\n    if(!topic) return \"\";\r\n    return(\r\n        <div className=\"chat-app\">\r\n            <div className=\"display-panel\">\r\n                <TopicDetails title={topic.title} sender={topic.sender} timestamp={topic.timestamp} topicText={topic.text}/>\r\n                <DiscussionList messages={topic.topicChat.messages}/>\r\n            </div>\r\n            <div className=\"send-panel\">\r\n                <MessageInput topicChatInfo={topicChatInfo} handleSubmit={handleTopicChatSubmit} handleChange={handleTopicChatChange} disabled={topicChatdisabled} topicId={topic.key}/>\r\n            </div>\r\n         </div>\r\n    );\r\n};\r\n\r\nexport default TopicDiscussionPage;","import React from 'react';\r\n\r\nconst Outgoing=({title,handleTitleChange,topicInfo,handleSubmit,handleChange,keyPress,disabled})=>{\r\n    return(\r\n    <div className=\"send-panel\">    \r\n      <div className=\"outgoing\">\r\n        <div className=\"outgoing-title\">\r\n            <label>Title:</label>\r\n            <input className=\"to-send-title\" onChange={(e)=>handleTitleChange(e)} value={title} placeholder=\"Enter title to send\"/>\r\n        </div>\r\n        <div className=\"outgoing-topic\">\r\n            <label>Topic:</label>\r\n            <textarea className=\"to-send-message\" value={topicInfo} placeholder=\"Enter message to send\" onChange={(e)=>handleChange(e)} />  \r\n        </div>\r\n        <button disabled={disabled} onClick={handleSubmit}>Send</button> \r\n      </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Outgoing;","import React from 'react';\r\n\r\nconst ProcessSpinner = ()=>{\r\n    return(    \r\n        <div className=\"lds-ring\">\r\n            <div></div><div></div><div></div><div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProcessSpinner;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {getUsers,\r\n        getMessages,\r\n        sendMessage,\r\n        sendUsernameToLogin, \r\n        sendUsernameToLogout,\r\n        sendTopicChatInfo,\r\n        getTopicChatInfoByTopicId\r\n       } from './services';\r\nimport TopicsPage from './topicsPage/TopicsPage';\r\nimport ErrorReporter from './ErrorReporter';\r\nimport NavigationBar from './NavigationBar';\r\nimport Logo from './Logo';\r\nimport TopicDiscussionPage from './topicsDiscussionPage/TopicDiscussionPage';\r\nimport Outgoing from './topicsPage/NewTopic';\r\nimport ProcessSpinner from './ProcessSpinner';\r\n\r\nclass App extends Component {\r\n   constructor(){\r\n        super();\r\n        this.state ={\r\n            title:'',\r\n            topicInfo:'',\r\n            topicChatInfo:'',\r\n            tempsender:'',\r\n            currentPage:'main',\r\n        }\r\n        this.backToMainPage = this.backToMainPage.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleTopicChatChange = this.handleTopicChatChange.bind(this);\r\n        this.handleTopicChatSubmit = this.handleTopicChatSubmit.bind(this);\r\n        this.joinNewTopicDiscussion = this.joinNewTopicDiscussion.bind(this);\r\n        this.updateSender = this.updateSender.bind(this);\r\n    \r\n        this.currentPage = this.currentPage.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.backToTopicsPage = this.backToTopicsPage.bind(this);\r\n        this.gotoNewTopicPage =this.gotoNewTopicPage.bind(this);\r\n    }\r\n    \r\n    backToMainPage(){\r\n        this.showloading();\r\n        setTimeout(()=>this.setState({topic:'',currentPage:'main'}),500);\r\n        \r\n    }\r\n    \r\n    updateSender(senderName){\r\n        if(!senderName) return;\r\n        this.setState({tempsender:senderName});\r\n    }\r\n    getStateError(){\r\n        return this.state.error;\r\n    }\r\n    \r\n    setStateError({err,errorType}){\r\n        if(!errorType) return;\r\n        this.setState(prevState=>({error:{...prevState.error,[errorType]: err}}));\r\n    }\r\n    \r\n    handleLoginSubmit(e){\r\n        e.preventDefault();\r\n         const username = this.state.tempsender;\r\n         const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n         sendUsernameToLogin({username,callback});\r\n         this.setState({sender:username, tempsender:''});\r\n    }\r\n    \r\n    handleTitleChange(e){\r\n        this.setState({title:e.target.value});\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({topicInfo:e.target.value});\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.topicInfo){\r\n            const username = this.state.sender;\r\n            const text = this.state.topicInfo; \r\n            const title =this.state.title;\r\n            const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n            sendMessage({title,username,text,callback})\r\n            .then((topicId)=>{\r\n                this.joinNewTopicDiscussion({key:topicId});\r\n            });\r\n            this.setState({topicInfo:'',title:''});\r\n            \r\n        }\r\n    }\r\n    \r\n    updateUsersState(){\r\n        const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n        getUsers({callback})\r\n        .then( (users)=>{\r\n            this.setState({\r\n               allUsers: users,\r\n            });\r\n        });\r\n    }\r\n    \r\n    updateMessagesState(){\r\n        const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n        getMessages({callback})\r\n        .then( (messages)=>{\r\n            this.setState({\r\n               allMessages: messages,\r\n            });\r\n        });\r\n    }\r\n    getAllUsersAndMessages(){\r\n        this.updateUsersState();\r\n        this.updateMessagesState();\r\n    }\r\n    \r\n    logout(){\r\n        const username=this.state.sender;\r\n        const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n        sendUsernameToLogout({username,callback});\r\n        delete this.state.sender;\r\n        this.setState(this.state);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getAllUsersAndMessages();\r\n        setInterval(() => {\r\n            if(this.state.topic){\r\n                this.updateTopicDiscussion({key:this.state.topic.key})\r\n            }else{\r\n                this.getAllUsersAndMessages();\r\n            }\r\n        },5000);\r\n    }\r\n    \r\n    checkDisabled(){\r\n        if(this.state.topicInfo){\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    handleTopicChatSubmit({e,topicId}){\r\n        e.preventDefault();\r\n        const username = this.state.sender;\r\n        const text = this.state.topicChatInfo; \r\n        const callback=({err,errorType})=>{this.setStateError({err,errorType})};  \r\n        sendTopicChatInfo({username,text,topicId,callback});\r\n        this.updateTopicDiscussion({key:topicId});//set time out\r\n        this.setState({topicChatInfo:''});\r\n    }\r\n    \r\n    handleTopicChatChange(e){\r\n        this.setState({topicChatInfo:e.target.value});\r\n    }\r\n    \r\n    showloading(){\r\n         this.setState({currentPage:'loading'});\r\n    }\r\n    \r\n    joinNewTopicDiscussion({key}){\r\n        if(!key) return;\r\n        this.showloading();\r\n        setTimeout(()=>this.updateTopicDiscussion({key}),1000);\r\n    }\r\n    \r\n    updateTopicDiscussion({key}){\r\n        if(!key) return;\r\n        const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n        getTopicChatInfoByTopicId({topicId:key,callback})\r\n        .then( (topic)=>{\r\n            this.setState({\r\n               topic: topic,\r\n               currentPage:'topicDiscussion',\r\n            });\r\n        });\r\n    }\r\n    \r\n    \r\n    backToTopicsPage(){\r\n        this.setState({topic:'',currentPage:'main'});    \r\n    }\r\n    \r\n    currentPage(){\r\n        if(this.state.currentPage==='topicDiscussion'){\r\n           return( \r\n                <TopicDiscussionPage \r\n                    topic={this.state.topic} \r\n                    topicChatInfo={this.state.topicChatInfo} \r\n                    handleTopicChatSubmit={this.handleTopicChatSubmit}  \r\n                    handleTopicChatChange={this.handleTopicChatChange} \r\n                    topicChatdisabled={!this.state.topicChatInfo}\r\n                />\r\n            );\r\n        }else if(this.state.currentPage==='newTopic'){\r\n            return (<Outgoing title={this.state.title} \r\n                        handleTitleChange={this.handleTitleChange} \r\n                        topicInfo={this.state.topicInfo} \r\n                        handleSubmit={this.handleSubmit} \r\n                        handleChange={this.handleChange}  \r\n                        disabled={!this.state.topicInfo}\r\n                     />);\r\n        }else if(this.state.currentPage==='main'){\r\n            return (\r\n                <TopicsPage allUsers={this.state.allUsers} \r\n                    allTopics={this.state.allMessages} \r\n                    joinNewTopicDiscussion={this.joinNewTopicDiscussion}\r\n                    \r\n                    \r\n                    topicChatInfo={this.state.topicChatInfo} \r\n                    handleTopicChatSubmit={this.handleTopicChatSubmit}  \r\n                    handleTopicChatChange={this.handleTopicChatChange} \r\n                    topicChatdisabled={!this.state.topicChatInfo}\r\n                />\r\n            );\r\n        }else if(this.state.currentPage==='loading'){\r\n            return(\r\n                <ProcessSpinner/>\r\n            );\r\n        }\r\n    }\r\n    \r\n    gotoNewTopicPage(){\r\n        this.setState({currentPage:'newTopic', topic:''});\r\n    }\r\n    \r\n    render(){ \r\n        return(\r\n            <div id=\"chat-app\">\r\n               <Logo/>\r\n               <NavigationBar updateSender={this.updateSender} value={this.state.tempsender} handleSubmit={this.handleLoginSubmit} disabled={!this.state.tempsender} isLogged={this.state.sender}  logout={this.logout} backToMainPage={this.backToMainPage} gotoNewTopicPage={this.gotoNewTopicPage}/>\r\n                 {this.currentPage()}\r\n               <div className=\"error-report\">\r\n                <ErrorReporter errorMessage={this.state.error}/>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","export const getUsers = ({callback}) =>{\r\n  return fetch('/users/')\r\n  .catch( error => Promise.reject({err:error, errorType:'service-error'}) )\r\n  .then( response =>{\r\n      if( response.ok ) {\r\n          callback({err:\"\",errorType:\"updateUserError\"});\r\n        return response.json();\r\n      }else{\r\n        throw new Error(\"Couldn't get User data!\");\r\n      }  \r\n  })\r\n  .catch( err => callback({err,errorType:\"updateUserError\"}));\r\n};\r\n\r\n\r\nexport const getMessages = ({callback}) =>{\r\n  return fetch('/topics/')\r\n  .catch( error => Promise.reject({err:error, errorType:'service-error'}) )\r\n  .then( response =>{\r\n      if( response.ok ) {\r\n          callback({err:\"\",errorType:\"UpdateMessageError\"});\r\n        return response.json();\r\n      }else{\r\n        throw new Error(\"Couldn't get Message data!\");\r\n      }\r\n  })\r\n  .catch( err => callback({err,errorType:\"UpdateMessageError\"}));\r\n};\r\n\r\nexport const sendMessage = ({title, username, text, callback}) =>{\r\n  return fetch('/topics/', {\r\n    method: 'POST',\r\n    headers: new Headers({      \r\n        'content-type': 'application/json'    \r\n    }), \r\n    body: JSON.stringify( {title, username, text} )\r\n  })\r\n  .catch( error => Promise.reject({err:error, errorType:'service-error'}) )\r\n  .then( response => {\r\n    if( response.ok ){\r\n        callback({err:\"\",errorType:\"sendMessageError\"});\r\n        return response.json();\r\n    }\r\n    else {\r\n        return response.json();\r\n    }\r\n  })\r\n  .then( responseMessage =>{\r\n      if(responseMessage.error){\r\n          throw new Error(responseMessage.error);\r\n      }else{\r\n          return responseMessage.topicId;\r\n      }\r\n  })\r\n  .catch( err => callback({err,errorType:\"sendMessageError\"}));\r\n};\r\n\r\nexport const sendUsernameToLogin = ({username,callback}) =>{\r\n    return fetch(`/login/${username}`,{\r\n        method: 'POST',\r\n        headers: new Headers({      \r\n        'content-type': 'application/json'    \r\n        }), \r\n    })\r\n    .catch( error => Promise.reject({err:error, errorType:'service-error'}) )\r\n    .then( response => {\r\n        if( response.ok ){\r\n            callback({err:\"\",errorType:\"LoginError\"});\r\n        } else {\r\n            return response.json();\r\n        }\r\n      })\r\n      .then( errorMessage =>{\r\n          if(errorMessage){\r\n              throw new Error(errorMessage.error);\r\n          }\r\n      })\r\n      .catch( err => callback({err,errorType:\"LoginError\"}));\r\n};\r\n\r\nexport const sendUsernameToLogout = ({username,callback}) =>{\r\n    return fetch(`/logout/${username}`,{\r\n        method:'POST',\r\n        headers: new Headers({\r\n            'content-type': 'application/json'\r\n        }),\r\n    })\r\n    .catch(error=>Promise.reject({err:error, errorType:'service-error'}))\r\n    .then(response =>{\r\n        if(response.ok){\r\n            callback({err:\"\",errorType:\"LogoutError\"});\r\n        } else{\r\n            return response.json();\r\n        }\r\n    })\r\n    .then(errorMessage =>{\r\n        if(errorMessage){\r\n            throw new Error(errorMessage.error);\r\n        }\r\n    })\r\n    .catch(err => callback({err,errorType:\"LogoutError\"}));\r\n};\r\n\r\nexport const sendTopicChatInfo = ({username,text,topicId,callback})=>{\r\n    return fetch(`/topicDiscussion/${topicId}`,{\r\n        method: 'POST',\r\n        headers: new Headers({      \r\n            'content-type': 'application/json'    \r\n        }), \r\n        body: JSON.stringify( {username,text} )\r\n    })\r\n    .catch(error=>Promise.reject({err:error, errorType:'service-error'}))\r\n    .then(response =>{\r\n        if(response.ok){\r\n            callback({err:\"\",errorType:\"SendDisscussionError\"});\r\n        } else{\r\n            return response.json();\r\n        }\r\n    })\r\n    .then(errorMessage =>{\r\n        if(errorMessage){\r\n            throw new Error(errorMessage.error);\r\n        }\r\n    })\r\n    .catch(err => callback({err,errorType:\"SendDisscussionError\"}));\r\n};\r\n\r\n\r\nexport const getTopicChatInfo = ({username,text,title,callback})=>{\r\n    return fetch(`/topicDiscussion/`,{\r\n        method: 'POST',\r\n        headers: new Headers({      \r\n            'content-type': 'application/json'    \r\n        }), \r\n        body: JSON.stringify( {title,text} )\r\n    })\r\n    .catch(error=>Promise.reject({err:error, errorType:'service-error'}))\r\n    .then(response =>{\r\n        if(response.ok){\r\n            callback({err:\"\",errorType:\"SendDisscussionError\"});\r\n        } else{\r\n            return response.json();\r\n        }\r\n    })\r\n    .then(errorMessage =>{\r\n        if(errorMessage){\r\n            throw new Error(errorMessage.error);\r\n        }\r\n    })\r\n    .catch(err => callback({err,errorType:\"SendDisscussionError\"}));\r\n};\r\n\r\nexport const getTopicChatInfoByTopicId =({topicId,callback})=>{\r\n    return fetch(`/topicDiscussion/${topicId}`)\r\n          .catch( error => Promise.reject({err:error, errorType:'service-error'}) )\r\n          .then( response =>{\r\n              if( response.ok ) {\r\n                  callback({err:\"\",errorType:\"UpdateDisscussionError\"});\r\n                return response.json();\r\n              }else{\r\n                throw new Error(\"Couldn't get Disscussion data!\");\r\n              }\r\n          })\r\n          .catch( err => callback({err,errorType:\"UpdateDisscussionError\"}));\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.f5b14d15.jpg\";"],"sourceRoot":""}