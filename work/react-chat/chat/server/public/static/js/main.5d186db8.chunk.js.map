{"version":3,"sources":["login.jsx","UserList.jsx","MessageList.jsx","Outgoing.jsx","logout.jsx","ChatPage.jsx","ErrorReporter.jsx","App.jsx","services.js","serviceWorker.js","index.js"],"names":["LoginPage","_ref","updateSender","value","disabled","handleSubmit","react_default","a","createElement","className","name","placeholder","onChange","e","target","onClick","UserList","users","keyId","userLine","Object","values","map","user","key","MessageList","messages","messageLine","message","sender","Date","timestamp","toString","text","Outgoing","handleChange","keyPress","Logout","logout","ChatPage","allUsers","allMessages","src_UserList","src_MessageList","src_Outgoing","src_logout","ErrorReporter","errorMessage","errorMessageLine","errorinfo","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tempsender","bind","assertThisInitialized","handleLoginSubmit","senderName","setState","error","err","errorType","prevState","objectSpread","defineProperty","_this2","preventDefault","username","_ref4","callback","fetch","method","headers","Headers","content-type","body","JSON","stringify","catch","Promise","reject","then","response","ok","json","Error","sendUsernameToLogin","_ref2","setStateError","_this3","_ref3","sendMessage","getAllUsersAndMessages","_this4","getUsers","_this5","getMessages","_ref5","updateUsersState","updateMessagesState","_this6","sendUsernameToLogout","_ref6","_this7","setInterval","src_ChatPage","login","id","checkLoginStatus","src_ErrorReporter","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d186db8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst LoginPage = ({updateSender, value, disabled,handleSubmit}) =>{\r\n    \r\n    return(\r\n    <div className=\"login\">\r\n        <form>\r\n          <input name=\"username\" placeholder=\"Enter Username\" value={value} onChange={(e)=>updateSender(e.target.value)}/>\r\n          <button onClick={(e)=>handleSubmit(e)} disabled={disabled}>Login</button>\r\n        </form>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nconst UserList=({users}) =>{\r\n    if(!users) return \"\";\r\n    let keyId=0;\r\n    const userLine = Object.values(users).map((user)=>\r\n      <li key={keyId++}>\r\n        <div className=\"user\">\r\n          <span className=\"username\">{user}</span>\r\n        </div>\r\n      </li>\r\n    );\r\n    return(\r\n        <ul className=\"users\"> \r\n            {userLine}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default UserList;","import React from 'react';\r\n\r\nconst MessageList=({messages}) =>{\r\n    if(!messages) return \"\";\r\n    let keyId=0;\r\n    const messageLine = messages.map((message)=>\r\n        <li key={keyId++}>\r\n          <div className=\"message\">\r\n            <div className=\"meta-info\">\r\n              <div className=\"sender-info\">\r\n                <span className=\"username\">{message.sender}</span>\r\n              </div>\r\n              <div className=\"message-info\">\r\n                <span className=\"timestamp\">{new Date(message.timestamp).toString()}</span>\r\n              </div>\r\n            </div>\r\n            <p className=\"message-text\">{message.text}</p>\r\n          </div>\r\n        </li>\r\n    );\r\n    return(\r\n        <ul className=\"users\"> \r\n            {messageLine}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default MessageList;","import React from 'react';\r\n\r\nconst Outgoing=({value,handleSubmit,handleChange,keyPress,disabled})=>{\r\n    return(\r\n      <div className=\"outgoing\">\r\n        <form>\r\n            <input className=\"to-send\" value={value} placeholder=\"Enter message to send\" onChange={(e)=>handleChange(e)} />  \r\n            <button disabled={disabled} onClick={handleSubmit}>Send</button>\r\n        </form>     \r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Outgoing;","import React from 'react';\r\n\r\nconst Logout =({logout})=>{\r\n    return (\r\n      <div className=\"logout\">\r\n          <button onClick={logout}>Logout</button>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Logout;","import React from 'react';\r\nimport UserList from './UserList';\r\nimport MessageList from './MessageList';\r\nimport Outgoing from './Outgoing';\r\nimport Logout from './logout';\r\n\r\nconst ChatPage =({allUsers,allMessages,value,handleSubmit,handleChange,keyPress,logout,disabled})=>{\r\n    return (\r\n        <div className=\"chat-app\">\r\n            <div className=\"display-panel\">\r\n                <UserList users={allUsers}/>\r\n                <MessageList messages={allMessages}/>\r\n            </div>\r\n            <div className=\"send-panel\">\r\n                <Outgoing value={value} handleSubmit={handleSubmit} handleChange={handleChange}  keyPress={keyPress} disabled={disabled}/>\r\n            </div>\r\n            <Logout logout={logout}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatPage;","import React from 'react';\r\n\r\nconst ErrorReporter = ({errorMessage}) =>{\r\n    if(!errorMessage){\r\n        return (<div className=\"show-errors\"></div>);\r\n    }\r\n    let keyId=0;//avoiding warnings\r\n    const errorMessageLine = Object.values(errorMessage).map((errorinfo)=>\r\n      <li key={keyId++}>\r\n        <div className=\"error-message\">\r\n          <span className=\"error\">{errorinfo.toString()}</span>\r\n        </div>\r\n      </li>\r\n    );\r\n    return (\r\n      <div className=\"show-errors\">\r\n        <ul className=\"show-errors-list\">{errorMessageLine}</ul>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ErrorReporter;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {getUsers,getMessages,sendMessage,sendUsernameToLogin, sendUsernameToLogout} from './services';\r\nimport LoginPage from './login';\r\nimport ChatPage from './ChatPage';\r\nimport ErrorReporter from './ErrorReporter';\r\n\r\nclass App extends Component {\r\n   constructor(){\r\n        super();\r\n        this.state ={\r\n            value:'',\r\n            tempsender:'',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\r\n        this.updateSender = this.updateSender.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n    \r\n    updateSender(senderName){\r\n        if(!senderName) return;\r\n        this.setState({tempsender:senderName});\r\n    }\r\n    getStateError(){\r\n        return this.state.error;\r\n    }\r\n    \r\n    setStateError({err,errorType}){\r\n        if(!errorType) return;\r\n        this.setState(prevState=>({error:{...prevState.error,[errorType]: err}}));\r\n    }\r\n    \r\n    handleLoginSubmit(e){\r\n        e.preventDefault();\r\n         const username = this.state.tempsender;\r\n         const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n         sendUsernameToLogin({username,callback});\r\n         this.setState({sender:username, tempsender:''});\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({value:e.target.value});\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.value){\r\n            const username = this.state.sender;\r\n            const text = this.state.value; \r\n            const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n            sendMessage({username,text,callback});\r\n            this.getAllUsersAndMessages();\r\n            this.setState({value:''});\r\n        }\r\n    }\r\n    \r\n    updateUsersState(){\r\n        const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n        getUsers({callback})\r\n        .then( (users)=>{\r\n            this.setState({\r\n               allUsers: users,\r\n            });\r\n        });\r\n    }\r\n    \r\n    updateMessagesState(){\r\n        const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n        getMessages({callback})\r\n        .then( (messages)=>{\r\n            this.setState({\r\n               allMessages: messages,\r\n            });\r\n        });\r\n    }\r\n    getAllUsersAndMessages(){\r\n        this.updateUsersState();\r\n        this.updateMessagesState();\r\n    }\r\n    \r\n    logout(){\r\n        const username=this.state.sender;\r\n        const callback=({err,errorType})=>{this.setStateError({err,errorType})};\r\n        sendUsernameToLogout({username,callback});\r\n        delete this.state.sender;\r\n        this.setState(this.state);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getAllUsersAndMessages();\r\n        setInterval(() => {this.getAllUsersAndMessages()},5000);\r\n    }\r\n    \r\n    checkDisabled(){\r\n        if(this.state.value){\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    checkLoginStatus(){\r\n        if(!this.state.sender){\r\n            return (<LoginPage updateSender={this.updateSender} value={this.state.sender} handleSubmit={this.handleLoginSubmit} disabled={!this.state.tempsender}/>);\r\n        }else{\r\n            return(                \r\n                <ChatPage allUsers={this.state.allUsers} allMessages={this.state.allMessages} value={this.state.value} handleSubmit={this.handleSubmit} handleChange={this.handleChange}  logout={this.logout} disabled={!this.state.value}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){ \r\n        return(\r\n             <div id=\"chat-app\">\r\n               {this.checkLoginStatus()}\r\n               <div className=\"error-report\">\r\n                <ErrorReporter errorMessage={this.state.error}/>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","export const getUsers = ({callback}) =>{\r\n  return fetch('/users/')\r\n  .catch( error => Promise.reject({err:error, errorType:'service-error'}) )\r\n  .then( response =>{\r\n      if( response.ok ) {\r\n          callback({err:\"\",errorType:\"updateUserError\"});\r\n        return response.json();\r\n      }else{\r\n        throw new Error(\"Couldn't get User data!\");\r\n      }  \r\n  })\r\n  .catch( err => callback({err,errorType:\"updateUserError\"}));\r\n};\r\n\r\n\r\nexport const getMessages = ({callback}) =>{\r\n  return fetch('/messages/')\r\n  .catch( error => Promise.reject({err:error, errorType:'service-error'}) )\r\n  .then( response =>{\r\n      if( response.ok ) {\r\n          callback({err:\"\",errorType:\"UpdateMessageError\"});\r\n        return response.json();\r\n      }else{\r\n        throw new Error(\"Couldn't get Message data!\");\r\n      }\r\n  })\r\n  .catch( err => callback({err,errorType:\"UpdateMessageError\"}));\r\n};\r\n\r\nexport const sendMessage = ({username, text, callback}) =>{\r\n  return fetch('/messages/', {\r\n    method: 'POST',\r\n    headers: new Headers({      \r\n        'content-type': 'application/json'    \r\n    }), \r\n    body: JSON.stringify( {username, text} )\r\n  })\r\n  .catch( error => Promise.reject({err:error, errorType:'service-error'}) )\r\n  .then( response => {\r\n    if( response.ok ){\r\n        callback({err:\"\",errorType:\"sendMessageError\"});\r\n    } else {\r\n        return response.json();\r\n    }\r\n  })\r\n  .then( errorMessage =>{\r\n      if(errorMessage){\r\n          throw new Error(errorMessage.error);\r\n      }\r\n  })\r\n  .catch( err => callback({err,errorType:\"sendMessageError\"}));\r\n};\r\n\r\nexport const sendUsernameToLogin = ({username,callback}) =>{\r\n    return fetch('/login/',{\r\n        method: 'POST',\r\n        headers: new Headers({      \r\n        'content-type': 'application/json'    \r\n        }), \r\n        body: JSON.stringify({username})\r\n    })\r\n    .catch( error => Promise.reject({err:error, errorType:'service-error'}) )\r\n    .then( response => {\r\n        if( response.ok ){\r\n            callback({err:\"\",errorType:\"LoginError\"});\r\n        } else {\r\n            return response.json();\r\n        }\r\n      })\r\n      .then( errorMessage =>{\r\n          if(errorMessage){\r\n              throw new Error(errorMessage.error);\r\n          }\r\n      })\r\n      .catch( err => callback({err,errorType:\"LoginError\"}));\r\n};\r\n\r\nexport const sendUsernameToLogout = ({username,callback}) =>{\r\n    return fetch('/logout/',{\r\n        method:'POST',\r\n        headers: new Headers({\r\n            'content-type': 'application/json'\r\n        }),\r\n        body: JSON.stringify({username})\r\n    })\r\n    .catch(error=>Promise.reject({err:error, errorType:'service-error'}))\r\n    .then(response =>{\r\n        if(response.ok){\r\n            callback({err:\"\",errorType:\"LogoutError\"});\r\n        } else{\r\n            return response.json();\r\n        }\r\n    })\r\n    .then(errorMessage =>{\r\n        if(errorMessage){\r\n            throw new Error(errorMessage.error);\r\n        }\r\n    })\r\n    .catch(err => callback({err,errorType:\"LogoutError\"}));\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}